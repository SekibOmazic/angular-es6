"use strict";
var TodoCtrl = function TodoCtrl(growl) {
  this.growl = growl;
  this.newTodo = '';
  this.items = [new TodoItem('This is a demo todo.', true)];
};
($traceurRuntime.createClass)(TodoCtrl, {
  addTodo: function() {
    var anItem = new TodoItem(this.newTodo);
    console.log(anItem);
    this.growl.addInfoMessage(anItem.toString() + 'added', {ttl: 3000});
    this.items.push(anItem);
    this.newTodo = '';
  },
  removeTodo: function(index) {
    var anItem = this.items.splice(index, 1);
    console.log(anItem[0]);
    this.growl.addWarnMessage(anItem[0].toString() + 'removed', {ttl: 3000});
  },
  clearAll: function() {
    this.items = [];
    this.growl.addErrorMessage('All Clear', {ttl: 3000});
  }
}, {});

"use strict";
var TodoItem = function TodoItem(text) {
  var completed = arguments[1] !== (void 0) ? arguments[1] : false;
  this.text = text;
  this.completed = completed;
};
($traceurRuntime.createClass)(TodoItem, {
  toggle: function() {
    this.completed = !this.completed;
  },
  toString: function() {
    return '${this.text}...';
  }
}, {});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRvZG9DdHJsLmpzIiwiQHRyYWNldXIvZ2VuZXJhdGVkL1RlbXBsYXRlUGFyc2VyLzEiLCJAdHJhY2V1ci9nZW5lcmF0ZWQvVGVtcGxhdGVQYXJzZXIvMiIsIlRvZG9JdGVtLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0FDSEEsQUFBSSxFQUFBLFdER0osU0FBTSxTQUFPLENBS0csS0FBSSxDQUFHO0FBQ2YsS0FBRyxNQUFNLEVBQUksTUFBSSxDQUFDO0FBR2xCLEtBQUcsUUFBUSxFQUFJLEdBQUMsQ0FBQztBQUNqQixLQUFHLE1BQU0sRUFBSSxFQUFDLEdBQUksU0FBTyxBQUFDLENBQUMsc0JBQXFCLENBQUcsS0FBRyxDQUFDLENBQUMsQ0FBQztBQ2J6QixBRGNwQyxDQ2RvQztBQ0F4QyxBQUFDLGVBQWMsWUFBWSxDQUFDLEFBQUM7QUZtQnpCLFFBQU0sQ0FBTixVQUFPLEFBQUM7TUFDQSxDQUFBLE1BQUssRUFBSSxJQUFJLFNBQU8sQUFBQyxDQUFDLElBQUcsUUFBUSxDQUFDO0FBQ3RDLFVBQU0sSUFBSSxBQUFDLENBQUMsTUFBSyxDQUFDLENBQUM7QUFDbkIsT0FBRyxNQUFNLGVBQWUsQUFBQyxDQUFDLE1BQUssU0FBUyxBQUFDLEVBQUMsQ0FBQSxDQUFFLFFBQU0sQ0FBRyxFQUFDLEdBQUUsQ0FBRyxLQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ2pFLE9BQUcsTUFBTSxLQUFLLEFBQUMsQ0FBQyxNQUFLLENBQUMsQ0FBQztBQUN2QixPQUFHLFFBQVEsRUFBSSxHQUFDLENBQUM7RUFDckI7QUFFQSxXQUFTLENBQVQsVUFBVyxLQUFJO01BQ1AsQ0FBQSxNQUFLLEVBQUksQ0FBQSxJQUFHLE1BQU0sT0FBTyxBQUFDLENBQUMsS0FBSSxDQUFHLEVBQUEsQ0FBQztBQUN2QyxVQUFNLElBQUksQUFBQyxDQUFDLE1BQUssQ0FBRSxDQUFBLENBQUMsQ0FBQyxDQUFDO0FBQ3RCLE9BQUcsTUFBTSxlQUFlLEFBQUMsQ0FBQyxNQUFLLENBQUUsQ0FBQSxDQUFDLFNBQVMsQUFBQyxFQUFDLENBQUEsQ0FBRSxVQUFRLENBQUcsRUFBQyxHQUFFLENBQUcsS0FBRyxDQUFDLENBQUMsQ0FBQztFQUMxRTtBQUVBLFNBQU8sQ0FBUCxVQUFRLEFBQUMsQ0FBRTtBQUNQLE9BQUcsTUFBTSxFQUFJLEdBQUMsQ0FBQztBQUNmLE9BQUcsTUFBTSxnQkFBZ0IsQUFBQyxDQUFDLFdBQVUsQ0FBRyxFQUFDLEdBQUUsQ0FBRyxLQUFHLENBQUMsQ0FBQyxDQUFDO0VBQ3hEO0FBQUEsS0VwQ2lGO0FGc0NyRjtBR3RDQTtBRkFBLEFBQUksRUFBQSxXRUFKLFNBQU0sU0FBTyxDQUVHLElBQUcsQUFBbUI7SUFBaEIsVUFBUSw2Q0FBSSxNQUFJO0FBQzlCLEtBQUcsS0FBSyxFQUFJLEtBQUcsQ0FBQztBQUNoQixLQUFHLFVBQVUsRUFBSSxVQUFRLENBQUM7QUZKTSxBRWV4QyxDRmZ3QztBQ0F4QyxBQUFDLGVBQWMsWUFBWSxDQUFDLEFBQUM7QUNPekIsT0FBSyxDQUFMLFVBQU0sQUFBQyxDQUFFO0FBQ0wsT0FBRyxVQUFVLEVBQUksRUFBQyxJQUFHLFVBQVUsQ0FBQztFQUNwQztBQUVBLFNBQU8sQ0FBUCxVQUFRLEFBQUMsQ0FBRTtBQUNQLFNBQU8sa0JBQWdCLENBQUM7RUFDNUI7QUFBQSxLRGJpRjtBQ2VyRiIsImZpbGUiOiJzY3JpcHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogV2lsbCBiZSBjb21waWxlZCBpbnRvIGEgZnVuY3Rpb24gdGhhdCBjYW4gdGFrZSB0aGUgY29uc3RydWN0b3IgcGFyYW1ldGVyc1xyXG4gKi9cclxuY2xhc3MgVG9kb0N0cmwge1xyXG5cclxuICAgIC8qKlxyXG4gICAgICogSGVyZSB5b3UgY2FuIHVzZSBpbmplY3QgYWxsIHRoZSB1c3VhbCBzdHVmZiwgJGh0dHAsICRyb3V0ZS4uLlxyXG4gICAgICovXHJcbiAgICBjb25zdHJ1Y3Rvcihncm93bCkge1xyXG4gICAgICAgIHRoaXMuZ3Jvd2wgPSBncm93bDtcclxuXHJcbiAgICAgICAgLy8gRXZlcnl0aGluZyBsaXZpbmcgb24gJ3RoaXMnIHdpbGwgYmUgYXZhaWxhYmxlIHRvIHRoZSB0ZW1wbGF0ZXMgYXMgJ21haW4nXHJcbiAgICAgICAgdGhpcy5uZXdUb2RvID0gJyc7XHJcbiAgICAgICAgdGhpcy5pdGVtcyA9IFtuZXcgVG9kb0l0ZW0oJ1RoaXMgaXMgYSBkZW1vIHRvZG8uJywgdHJ1ZSldO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQWxsIG1ldGhvZHMgbG9jYXRlZCBvbiB0aGUgYm9keSBvZiB0aGUgY2xhc3Mgd2lsbCBhbHNvIGJlIGF2YWlsYWJsZSB0byB0aGUgbmFtZWQgY29udHJvbGxlclxyXG4gICAgICovXHJcbiAgICBhZGRUb2RvKCkge1xyXG4gICAgICAgIGxldCBhbkl0ZW0gPSBuZXcgVG9kb0l0ZW0odGhpcy5uZXdUb2RvKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhhbkl0ZW0pO1xyXG4gICAgICAgIHRoaXMuZ3Jvd2wuYWRkSW5mb01lc3NhZ2UoYW5JdGVtLnRvU3RyaW5nKCkrJ2FkZGVkJywge3R0bDogMzAwMH0pO1xyXG4gICAgICAgIHRoaXMuaXRlbXMucHVzaChhbkl0ZW0pO1xyXG4gICAgICAgIHRoaXMubmV3VG9kbyA9ICcnO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbW92ZVRvZG8oaW5kZXgpIHtcclxuICAgICAgICBsZXQgYW5JdGVtID0gdGhpcy5pdGVtcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGFuSXRlbVswXSk7XHJcbiAgICAgICAgdGhpcy5ncm93bC5hZGRXYXJuTWVzc2FnZShhbkl0ZW1bMF0udG9TdHJpbmcoKSsncmVtb3ZlZCcsIHt0dGw6IDMwMDB9KTtcclxuICAgIH1cclxuXHJcbiAgICBjbGVhckFsbCgpIHtcclxuICAgICAgICB0aGlzLml0ZW1zID0gW107XHJcbiAgICAgICAgdGhpcy5ncm93bC5hZGRFcnJvck1lc3NhZ2UoJ0FsbCBDbGVhcicsIHt0dGw6IDMwMDB9KTtcclxuICAgIH1cclxuXHJcbn0iLCJ2YXIgJF9fcGxhY2Vob2xkZXJfXzAgPSAkX19wbGFjZWhvbGRlcl9fMSIsIigkdHJhY2V1clJ1bnRpbWUuY3JlYXRlQ2xhc3MpKCRfX3BsYWNlaG9sZGVyX18wLCAkX19wbGFjZWhvbGRlcl9fMSwgJF9fcGxhY2Vob2xkZXJfXzIpIiwiY2xhc3MgVG9kb0l0ZW0ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHRleHQsIGNvbXBsZXRlZCA9IGZhbHNlKSB7XHJcbiAgICAgICAgdGhpcy50ZXh0ID0gdGV4dDtcclxuICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IGNvbXBsZXRlZDtcclxuICAgIH1cclxuXHJcbiAgICB0b2dnbGUoKSB7XHJcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSAhdGhpcy5jb21wbGV0ZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgdG9TdHJpbmcoKSB7XHJcbiAgICAgICAgcmV0dXJuICcke3RoaXMudGV4dH0uLi4nO1xyXG4gICAgfVxyXG5cclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==